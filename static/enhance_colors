from PIL import Image, ImageEnhance
import numpy as np

def convert_to_primary_colors(image_path, output_path):
    # Open the image
    image = Image.open(image_path)
    
    # Step 1: Enhance the saturation to make colors more vivid
    enhancer = ImageEnhance.Color(image)
    enhanced_image = enhancer.enhance(2)  # Increase saturation by factor of 2
    
    # Step 2: Convert to RGB if not already
    enhanced_image = enhanced_image.convert("RGB")
    
    # Step 3: Convert to numpy array for manipulation
    img_array = np.array(enhanced_image)
    
    # Define thresholds for RGB channels
    def map_to_primary_color(pixel):
        red, green, blue = pixel
        if red > green and red > blue:
            return [255, 0, 0]  # Red
        elif green > red and green > blue:
            return [0, 255, 0]  # Green
        elif blue > red and blue > green:
            return [0, 0, 255]  # Blue
        else:
            return [255, 255, 255]  # White for neutral colors
    
    # Apply the mapping to each pixel
    primary_color_image = np.apply_along_axis(map_to_primary_color, 2, img_array)
    
    # Step 4: Convert back to an image
    result_image = Image.fromarray(np.uint8(primary_color_image))
    
    # Step 5: Save the result image
    result_image.save(output_path)

# Usage
convert_to_primary_colors('input_image.jpg', 'output_primary_colors.jpg')
O

