#!/home/jack/miniconda3/envs/cloned_base/bin/python
import os
import moviepy.editor as mp
from moviepy.video.fx.fadein import fadein
from moviepy.video.fx.fadeout import fadeout
from sys import argv
import subprocess

# Directory where your images are stored
image_dir = 'static/novel_images'
output_file = 'static/temp_exp/fadem.mp4'

# Parameters
frame_duration = 2  # Duration for each frame (in seconds)
fade_duration = 0.5  # Duration of fade in/out (in seconds)
fps = 24  # Frames per second for the output video

def make_video_from_images(image_dir, output_file, frame_duration, fade_duration, fps):
    # Collect all image paths from the directory
    image_files = []
    for file in os.listdir(image_dir):
        if file.endswith('.jpg') or file.endswith('.png'):
            image_files.append(os.path.join(image_dir, file))

    # Sort images by their modified time to maintain order
    image_files.sort(key=os.path.getmtime)

    # Create a list of moviepy ImageClip objects
    clips = []
    num_images = len(image_files)
    
    for i, image_file in enumerate(image_files):
        clip = mp.ImageClip(image_file).set_duration(frame_duration)

        # Only apply fade-in to the second image onward to avoid black start on the first frame
        if i == 0:
            clip = fadeout(clip, fade_duration)  # Only fade out the first image
        elif i == num_images - 1:
            clip = fadein(clip, fade_duration)  # Apply fade-in to the last image
        else:
            # Apply both fade-in and fade-out for middle images
            clip = fadein(clip, fade_duration)
            clip = fadeout(clip, fade_duration)

        clips.append(clip)

    # Concatenate all clips into one final video
    video = mp.concatenate_videoclips(clips, method="compose")

    # Write the final video file
    video.write_videofile(output_file, fps=fps)

if __name__ == "__main__":
    make_video_from_images(image_dir, output_file, frame_duration, fade_duration, fps)
    output_file = 'static/temp_exp/fadem.mp4'
    subprocess.run(['./add_frame_fadem', output_file])
